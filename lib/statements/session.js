var StatementUtil = require('../util');

var VERBS = require('../verbs');

/**
 * Generate and store a learning activity statement for a user logging into a system
 *
 * @param  {Object}         config                            @see config
 * @param  {Object}         statement                         @see statement
 * @param  {String}         statement.metadata.id             The id of the session generated by logging in
 * @param  {Function}       [callback]                        @see callback
 */
var login = module.exports.login = function (config, statement, callback) {
  // TODO: Validation

  StatementUtil.processStatement(config, statement, {
    'verb': VERBS.LOGGED_IN,
    'XAPI': {
      'uuid': [statement.metadata.id],
      'object': {
        'id': config.platform.url
      }
    },
    'CALIPER': {
      'object': StatementUtil.Caliper.generateEdApp(config.platform),
      'generated': StatementUtil.Caliper.generateEntity(CaliperSession, {
        'id': statement.metadata.id,
        'startedAtTime': StatementUtil.Caliper.generateDate(statement.timestamp),
        'actor': StatementUtil.Caliper.generatePerson(statement.actor)
      })
    }
  }, callback);
};

/**
 * Generate and store a learning activity statement for a user logging out of a system
 *
 * @param  {Object}         config                            @see config
 * @param  {Object}         statement                         @see statement
 * @param  {Function}       [callback]                        @see callback
 */
var logout = module.exports.logout = function (config, statement, callback) {
  // TODO: Validation

  StatementUtil.processStatement(config, statement, {
    'verb': VERBS.LOGGED_OUT,
    'XAPI': {
      'object': {
        'id': config.platform.url
      }
    },
    'CALIPER': {
      'object': StatementUtil.Caliper.generateEdApp(config.platform)
    }
  }, callback);
};
